/*!
 * liricle v4.0.5
 * javascript lyric synchronizer library
 * https://github.com/mcanam/liricle
 * MIT license by mcanam
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).Liricle=e()}(this,(function(){"use strict";const t=/\[(ar|ti|al|au|by|length|offset|re|ve):(.*)\]/i,e=/\[\d{2}:\d{2}(.\d{2,})?\]/g,n=/<\d{2}:\d{2}(.\d{2,})?>/g,i=/<\d{2}:\d{2}(.\d{2,})?>\s*[^\s|<]*/g;function s(n){const s={tags:{},lines:[],enhanced:(a=n,i.test(a))};var a;if("string"!=typeof n||!n.trim())return console.warn("[Liricle] LRC is empty."),s;return n.split(/\r?\n/).forEach((n=>{const i=function(e){const[,n,i]=e.match(t)||[];if(!n||!i)return;return{key:n,value:i.trim()}}(n),a=function(t){const n=[],i=t.match(e);if(!i)return;return i.forEach((e=>{n.push({time:o(e),text:r(t),words:l(t)})})),n}(n);i&&(s.tags[i.key]=i.value),a&&s.lines.push(...a)})),s.lines=function(t){return t.sort(((t,e)=>t.time-e.time))}(s.lines),s}function o(t){let e=t.replace(/\[|\]|<|>/g,"");return e=function(t){let[e,n]=t.split(":");return e=60*parseFloat(e),n=parseFloat(n),e+n}(e),e}function r(t){let i=t.replace(e,"");return i=i.replace(n,""),i=i.replace(/\s{2,}/g," "),i.trim()}function l(t){const e=[],s=t.match(i);return s?(s.forEach((t=>{const i=t.match(n)[0];e.push({time:o(i),text:r(t)})})),e):null}function a(t,e){let n=null,i=null;if(n=function(t,e){const n=u(t,e);return null!=n?{index:n,...t[n]}:null}(t.lines,e),null!=n){if(t.enhanced){i=function(t,e){if(null==t)return t;const n=u(t,e);return null!=n?{index:n,...t[n]}:null}(n.words,e)}delete n.words}return{line:n,word:i}}function u(t,e){const n=[];if(t.forEach((t=>{const i=e-t.time;i>=0&&n.push(i)})),0==n.length)return null;const i=Math.min(...n);return n.indexOf(i)}return class{#t=null;#e=null;#n=!1;#i=0;#s={};#o=()=>{};#r=()=>{};get data(){return this.#s}get offset(){return this.#i}set offset(t){t=parseFloat(t)/1e3,this.#i=t||0}load(t={}){this.#n=!1,t.text&&(this.#s=s(t.text),this.#n=!0,this.#o(this.#s)),t.url&&fetch(t.url).then((t=>t.text())).then((t=>{this.#s=s(t),this.#n=!0,this.#o(this.#s)})).catch((t=>{throw this.#n=!1,Error("[Liricle] Failed to load LRC. "+t.message)}))}sync(t,e=!1){if(!this.#n)return console.warn("[Liricle] LRC not loaded yet.");const{enhanced:n}=this.#s,{line:i,word:s}=a(this.#s,t+this.offset);if(null==i&&null==s)return;if(e)return this.#r(i,s);const o=i.index==this.#t,r=null!=s&&s.index==this.#e;if(n&&null!=s){if(o&&r)return}else if(o)return;this.#r(i,s),this.#t=i.index,this.#e=null!=s?s.index:null}on(t,e){switch(t){case"load":this.#o=e;break;case"sync":this.#r=e}}}}));
//# sourceMappingURL=liricle.min.js.map
