/*!
 * liricle v4.2.0
 * Lyrics Synchronizer
 * https://github.com/mcanam/liricle#readme
 * MIT license by mcanam
 */
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t="undefined"!=typeof globalThis?globalThis:t||self).Liricle=n()}(this,(function(){"use strict";const t=/\[(ar|ti|al|au|by|length|offset|re|ve):(.*)\]/i,n=/\[\d{2}:\d{2}(.\d{2,})?\]/g,e=/<\d{2}:\d{2}(.\d{2,})?>/g,i=/<\d{2}:\d{2}(.\d{2,})?>\s*[^\s|<]*/g;function r(r,l){const c=r.split(/\r?\n/).map((t=>t.trim())),d=l?.skipBlankLine??!0,u={tags:{},lines:[],enhanced:a(r)};return c.forEach((r=>{if(!r)return;const a=function(n){const e=n.match(t),i=e?.[1],r=e?.[2];return i&&r?{[i]:r.trim()}:null}(r),l=function(t,r){const a=[],l=t.match(n);return l?(l.forEach((n=>{const l=s(t);if(!l&&r)return;const c=o(n),d=function(t){const n=[],r=t.match(i);return r?(r.forEach((t=>{const i=t.match(e)?.[0];i&&n.push({time:o(i),text:s(t)})})),n):null}(t);a.push({time:c,text:l,words:d})})),a):null}(r,d);a&&Object.assign(u.tags,a),l&&u.lines.push(...l)})),u.lines=u.lines.sort(((t,n)=>t.time-n.time)),u}function o(t){return function(t){let[n,e]=t.split(":");return n=60*parseFloat(n),e=parseFloat(e),n+e}(t.replace(/\[|\]|<|>/g,""))}function s(t){return t.replace(n,"").replace(e,"").replace(/\s{2,}/g," ").trim()}function a(t){return i.test(t)}function l(t,n){let e=function(t,n){const e=c(t,n);return null!==e?{index:e,...t[e]}:null}(t.lines,n),i=null;return t.enhanced&&e?.words&&(i=function(t,n){if(!t)return null;const e=c(t,n);return null!==e?{index:e,...t[e]}:null}(e.words,n)),delete e?.words,{line:e,word:i}}function c(t,n){const e=[];if(t.forEach((t=>{const i=n-t.time;i>=0&&e.push(i)})),0===e.length)return null;const i=Math.min(...e);return e.indexOf(i)}return class{#t=null;#n=0;#e=null;#i=null;#r=!1;#o=()=>{};#s=()=>{};#a=()=>{};get data(){return this.#t}get offset(){return this.#n}set offset(t){this.#n=t/1e3}load(t){const n=t?.text,e=t?.url,i=t?.skipBlankLine??!0;if(this.#r=!1,this.#e=null,this.#i=null,!n?.trim()&&!e?.trim())throw Error("[Liricle]: text or url options required.");if(n&&e)throw Error("[Liricle]: text and url options cant be used together.");n&&(this.#t=r(n,{skipBlankLine:i}),this.#r=!0,this.#o(this.#t)),e&&fetch(e).then((t=>{if(!t.ok)throw Error("Network error with status "+t.status);return t.text()})).then((t=>{this.#t=r(t,{skipBlankLine:i}),this.#r=!0,this.#o(this.#t)})).catch((t=>{this.#s(t)}))}sync(t,n=!1){if(!this.#r||!this.#t)return console.warn("[Liricle]: lyrics not loaded yet.");const{enhanced:e}=this.#t,{line:i,word:r}=l(this.#t,t+this.#n);if(!i&&!r)return;if(n)return this.#a(i,r);const o=null!==i&&i.index===this.#e,s=null!==r&&r.index===this.#i;e&&r&&o&&s||!e&&o||(this.#a(i,r),this.#e=i?.index??null,this.#i=r?.index??null)}on(t,n){switch(t){case"load":this.#o=n;break;case"loaderror":this.#s=n;break;case"sync":this.#a=n}}}}));
//# sourceMappingURL=liricle.js.map
